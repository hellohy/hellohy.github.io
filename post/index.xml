<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on hellohy blog</title>
    <link>https://hellohy.github.io/post/</link>
    <description>Recent content in Posts on hellohy blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 13 Feb 2018 12:21:57 -0500</lastBuildDate>
    
	<atom:link href="https://hellohy.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Theme Preview</title>
      <link>https://hellohy.github.io/post/theme-preview/</link>
      <pubDate>Sun, 16 Sep 2018 01:35:39 +0800</pubDate>
      
      <guid>https://hellohy.github.io/post/theme-preview/</guid>
      <description>Copy from 《Hugo 主题 Nuo 文章样式预览》 这篇文章集中说明主题所支持的 Markdown 语法和 Hugo Shortcodes 插件，你也可以在这里预览到他们的样子。如果你不喜欢某些样式，可以去</description>
    </item>
    
    <item>
      <title>h5直播技术探索</title>
      <link>https://hellohy.github.io/post/vue-hls/</link>
      <pubDate>Sun, 05 Aug 2018 17:20:18 +0800</pubDate>
      
      <guid>https://hellohy.github.io/post/vue-hls/</guid>
      <description>本文主要是对目前WEB端主流的直播技术进行一些探索后整理的资料 视频流协议 主流的分为两种，HLS和RTMP，移动端WEB更多的采用HLS，由于</description>
    </item>
    
    <item>
      <title>Chrome DevTools Profiler(Memory)</title>
      <link>https://hellohy.github.io/post/chrome-devtool-profiler/</link>
      <pubDate>Sun, 01 Jul 2018 04:29:46 +0800</pubDate>
      
      <guid>https://hellohy.github.io/post/chrome-devtool-profiler/</guid>
      <description>本文介绍chrome devtool的Profilers(Memory)面板的使用 使用 Chrome 任务管理器实时监视内存使用 使用 Chrome 任务管理器作为内存问题</description>
    </item>
    
    <item>
      <title>Tarjan算法寻找有向图的强连通分量</title>
      <link>https://hellohy.github.io/post/tarjan/</link>
      <pubDate>Tue, 20 Mar 2018 12:06:29 +0000</pubDate>
      
      <guid>https://hellohy.github.io/post/tarjan/</guid>
      <description>Tarjan算法寻找有向图的强连通分量 本文将介绍如何用javascript实现Tarjan算法来寻找图的强连通分量，在此之前，会简单介绍一些</description>
    </item>
    
    <item>
      <title>如何在react中封装echarts</title>
      <link>https://hellohy.github.io/post/react-echarts/</link>
      <pubDate>Mon, 18 Dec 2017 20:37:18 +0000</pubDate>
      
      <guid>https://hellohy.github.io/post/react-echarts/</guid>
      <description>echarts一款非常不错的可视化图表库，本文以echarts3.x版本为例，通过分析echarts-for-react源码介绍如何在rea</description>
    </item>
    
    <item>
      <title>egret入门介绍</title>
      <link>https://hellohy.github.io/post/egret%E5%85%A5%E9%97%A8%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Fri, 17 Nov 2017 11:19:21 +0000</pubDate>
      
      <guid>https://hellohy.github.io/post/egret%E5%85%A5%E9%97%A8%E4%BB%8B%E7%BB%8D/</guid>
      <description>介绍一下egret的容器概念、资源管理、纹理与位图、事件以及tween的使用 Egret入门指南 简单介绍下egret~ 目录 容器 资源管理 纹理和位</description>
    </item>
    
    <item>
      <title>js深浅拷贝</title>
      <link>https://hellohy.github.io/post/js-clone/</link>
      <pubDate>Wed, 16 Aug 2017 14:46:58 +0000</pubDate>
      
      <guid>https://hellohy.github.io/post/js-clone/</guid>
      <description>实现js深浅拷贝的几种方法 浅拷贝 只复制对象的第一层键值对。 // 浅拷贝实现 function shadowCopy(target, source){ if( !source || typeof source !== &#39;object&#39;){ return; } // 这个方法有点小trick，target一定得</description>
    </item>
    
    <item>
      <title>用css模拟有滚动条的容器内部元素fixed效果</title>
      <link>https://hellohy.github.io/post/css-fake-fixed/</link>
      <pubDate>Mon, 14 Aug 2017 21:05:16 +0000</pubDate>
      
      <guid>https://hellohy.github.io/post/css-fake-fixed/</guid>
      <description>通常，大家都知道fixed属性是相对于屏幕视口（viewport)的位置来指定元素位置，元素的位置在屏幕滚动时不会改变。 需求 在实际项目中，遇</description>
    </item>
    
  </channel>
</rss>