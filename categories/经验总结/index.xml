<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>经验总结 on Hellohy</title>
    <link>https://hellohy.github.io/categories/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/</link>
    <description>Recent content in 经验总结 on Hellohy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 18 Dec 2017 20:37:18 +0000</lastBuildDate>
    
	<atom:link href="https://hellohy.github.io/categories/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何在react中封装echarts</title>
      <link>https://hellohy.github.io/posts/react-echarts/</link>
      <pubDate>Mon, 18 Dec 2017 20:37:18 +0000</pubDate>
      
      <guid>https://hellohy.github.io/posts/react-echarts/</guid>
      <description>echarts一款非常不错的可视化图表库，本文以echarts3.x版本为例，通过分析echarts-for-react源码介绍如何在react中封装使用echarts
目录  为什么要封装 如何实现 总结 - - -  为什么要封装 旧的思维 习惯了在jquery开发模式下导入echarts、swiper、d3等需要操作到真实dom的第三方库，突然切换到React，会按照旧的思维模式使用，导致一些问题产生。先看看不封装的情况下在React中使用echarts:
import React, { Component } from &#39;react&#39; import echarts from &#39;echarts&#39; export default class OldChart extends Component { componentDidMount () { // 基于准备好的dom，初始化echarts实例 var myChart = echarts.init(document.getElementById(&#39;old-chart&#39;)) // 绘制图表 myChart.setOption({ title: { text: &#39;ECharts 入门示例&#39; }, tooltip: {}, xAxis: { data: [&#39;衬衫&#39;, &#39;羊毛衫&#39;, &#39;雪纺衫&#39;, &#39;裤子&#39;, &#39;高跟鞋&#39;, &#39;袜子&#39;] }, yAxis: {}, series: [{ name: &#39;销量&#39;, type: &#39;bar&#39;, data: [5, 20, 36, 10, 10, 20] }] }) } render () { return ( &amp;lt;div id=&#39;old-chart&#39; style={{ width: 400, height: 400 }} /&amp;gt; ) } }  结果截图如下： 这种方式先通过document.</description>
    </item>
    
  </channel>
</rss>